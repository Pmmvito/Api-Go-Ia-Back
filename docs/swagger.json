{
    "swagger": "2.0",
    "info": {
        "description": "API REST para autentica√ß√£o JWT, an√°lise inteligente de notas fiscais de supermercado e gest√£o de categorias\n\n## üöÄ Funcionalidades Principais:\n- üîê **Autentica√ß√£o JWT** com tokens de 7 dias\n- ü§ñ **An√°lise de Notas com IA** usando Google Gemini (2-3s)\n- üìä **Categoriza√ß√£o Autom√°tica** de produtos de supermercado\n- üìù **CRUD Completo** de recibos e categorias\n- üîç **Filtros Avan√ßados** por categoria, data e valor\n- ‚ö° **Respostas Otimizadas** (55% menores)\n\n## üìñ Como Usar:\n1. Registre-se em `/register`\n2. Fa√ßa login em `/login` para obter o token JWT\n3. Clique em **Authorize** üîì (cadeado verde) e cole: `Bearer SEU_TOKEN`\n4. Agora voc√™ pode testar todos os endpoints protegidos!\n\n## üõí Categorias de Supermercado (45+ categorias):\n**Alimentos B√°sicos:** Gr√£os e Cereais, Massas, Farinhas\n**Prote√≠nas:** Carnes Vermelhas, Aves, Peixes, Frios e Embutidos\n**Latic√≠nios:** Leite, Queijos, Iogurtes, Manteiga\n**Hortifruti:** Frutas, Verduras, Legumes\n**Padaria:** P√£es, Bolos e Tortas, Biscoitos\n**Bebidas:** Refrigerantes, Sucos, √Ågua, Bebidas Alco√≥licas, Caf√©s e Ch√°s\n**Congelados:** Congelados, Sorvetes\n**Despensa:** √ìleos, Temperos, Molhos, Enlatados\n**Doces:** Chocolates, Doces e Balas, Sobremesas\n**Snacks:** Salgadinhos, Lanches R√°pidos\n**Higiene:** Higiene Bucal, Corporal, Papel Higi√™nico, Fraldas\n**Limpeza:** Limpeza Geral, Limpeza de Roupas, Descart√°veis\n**Outros:** Pet Shop, Alimenta√ß√£o Infantil, Utilidades Dom√©sticas\n\nUse `/categories` para ver todas as categorias com IDs!",
        "title": "API de Gest√£o de Notas Fiscais com IA",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Equipe de Desenvolvimento",
            "url": "https://github.com/Pmmvito/Golang-Api-Exemple",
            "email": "suporte@exemplo.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "2.0"
    },
    "host": "147.185.221.212:61489",
    "basePath": "/api/v1",
    "paths": {
        "/categories": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all expense categories sorted by name. Returns: 1-Alimenta√ß√£o, 2-Transporte, 3-Sa√∫de, 4-Lazer, 5-Educa√ß√£o, 6-Moradia, 7-Vestu√°rio, 8-Outros",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "üìÅ Categories"
                ],
                "summary": "List all categories",
                "responses": {
                    "200": {
                        "description": "List of categories with count",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/category": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new expense category for organizing receipt items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "üìÅ Categories"
                ],
                "summary": "Create new category",
                "parameters": [
                    {
                        "description": "Category data (name is required, description/icon/color are optional)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/category/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get details of a specific category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "üìÅ Categories"
                ],
                "summary": "Get category details",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a category permanently. WARNING: This will also remove the category association from all receipt items (sets categoryId to null).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "üìÅ Categories"
                ],
                "summary": "Delete category",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update category information (name, description, icon, color). All fields are optional - only send what you want to update.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "üìÅ Categories"
                ],
                "summary": "Update category",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category data to update (all fields optional)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request or no fields to update",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/item/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Busca um item pelo ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Buscar item por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ReceiptItemResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/item/{id}/date/{date}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Busca item por ID e data de recibo",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Buscar item por ID e data de recibo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Data (YYYY-MM-DD)",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ReceiptItemResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/items": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lista todos os itens de recibos do usu√°rio autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Listar todos os itens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ReceiptItemResponse"
                            }
                        }
                    }
                }
            }
        },
        "/items/date/{date}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lista itens de recibos do usu√°rio autenticado por data de recibo",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Listar itens por data de recibo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data (YYYY-MM-DD)",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ReceiptItemResponse"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user with email and password. Returns a JWT token valid for 7 days. Use this token in the Authorization header as \"Bearer {token}\" for all protected endpoints.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "üîê Authentication"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "User credentials (email and password)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful with JWT token",
                        "schema": {
                            "$ref": "#/definitions/handler.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid email or password",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information about the authenticated user (requires JWT token)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "üîê Authentication"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Busca produto pelo ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Buscar produto por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do produto",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ProductResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/product/{id}/name/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Busca produto por ID e nome",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Buscar produto por ID e nome",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do produto",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nome do produto",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ProductResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lista todos os produtos cadastrados",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Listar todos os produtos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ProductResponse"
                            }
                        }
                    }
                }
            }
        },
        "/products/name/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Busca produtos pelo nome (parcial)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Buscar produtos por nome",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nome do produto (parcial)",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ProductResponse"
                            }
                        }
                    }
                }
            }
        },
        "/receipt/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Busca um recibo pelo ID do usu√°rio autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notasfiscais"
                ],
                "summary": "Buscar recibo por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do recibo",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ReceiptResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/receipts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lista todos os recibos do usu√°rio autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notasfiscais"
                ],
                "summary": "Listar todos os recibos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ReceiptSummary"
                            }
                        }
                    }
                }
            }
        },
        "/receipts-basic": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lista todos os recibos do usu√°rio autenticado (vers√£o ultra-simplificada para sele√ß√£o)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notasfiscais-basic"
                ],
                "summary": "Listar recibos b√°sicos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ReceiptBasic"
                            }
                        }
                    }
                }
            }
        },
        "/receipts-basic/date/{date}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lista recibos b√°sicos do usu√°rio autenticado por data espec√≠fica (YYYY-MM-DD)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notasfiscais-basic"
                ],
                "summary": "Listar recibos b√°sicos por data espec√≠fica",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data (YYYY-MM-DD)",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ReceiptBasic"
                            }
                        }
                    }
                }
            }
        },
        "/receipts-basic/period": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lista recibos b√°sicos do usu√°rio autenticado por per√≠odo de datas",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notasfiscais-basic"
                ],
                "summary": "Listar recibos b√°sicos por per√≠odo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data inicial (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Data final (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ReceiptBasic"
                            }
                        }
                    }
                }
            }
        },
        "/receipts/date/{date}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lista recibos do usu√°rio autenticado por data espec√≠fica (YYYY-MM-DD)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notasfiscais"
                ],
                "summary": "Buscar recibos por data espec√≠fica",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data (YYYY-MM-DD)",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ReceiptSummary"
                            }
                        }
                    }
                }
            }
        },
        "/receipts/period": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lista recibos do usu√°rio autenticado por per√≠odo de datas",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notasfiscais"
                ],
                "summary": "Buscar recibos por per√≠odo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data inicial (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Data final (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ReceiptSummary"
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Create a new user account. After registration, use the login endpoint to get your JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "üîê Authentication"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User registration data (name, email, password)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully with JWT token",
                        "schema": {
                            "$ref": "#/definitions/handler.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request or email already registered",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scan-qrcode/confirm": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Categoriza items com IA e salva nota fiscal no banco de dados. Envie APENAS o campo 'data' da resposta do preview, N√ÉO envie 'message'.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "receipts"
                ],
                "summary": "Confirmar e salvar NFC-e (Etapa 2/2)",
                "parameters": [
                    {
                        "description": "Dados da nota (envie APENAS o campo 'data' do preview, sem 'message')",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ScanQRCodeConfirmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ScanQRCodeConfirmResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scan-qrcode/preview": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Extrai dados da NFC-e sem salvar no banco. Retorna dados para visualiza√ß√£o/edi√ß√£o",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "receipts"
                ],
                "summary": "Preview de NFC-e via QR Code (Etapa 1/2)",
                "parameters": [
                    {
                        "description": "QR Code URL",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ScanQRCodePreviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ScanQRCodePreviewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.AuthResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/schemas.UserResponse"
                }
            }
        },
        "handler.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#3498db"
                },
                "description": {
                    "type": "string",
                    "example": "Gastos com viagens e turismo"
                },
                "icon": {
                    "type": "string",
                    "example": "‚úàÔ∏è"
                },
                "name": {
                    "type": "string",
                    "example": "Viagens"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "joao@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "senha123"
                }
            }
        },
        "handler.PreviewItem": {
            "type": "object",
            "properties": {
                "deleted": {
                    "description": "Se true, item ser√° ignorado (usado no confirm)",
                    "type": "boolean"
                },
                "description": {
                    "description": "Nome do produto",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantidade",
                    "type": "number"
                },
                "tempId": {
                    "description": "ID tempor√°rio para edi√ß√£o",
                    "type": "integer"
                },
                "total": {
                    "description": "Total do item",
                    "type": "number"
                },
                "unit": {
                    "description": "Unidade (kg, un, ml, etc)",
                    "type": "string"
                },
                "unitPrice": {
                    "description": "Pre√ßo unit√°rio",
                    "type": "number"
                }
            }
        },
        "handler.PreviewReceiptData": {
            "type": "object",
            "properties": {
                "accessKey": {
                    "description": "Chave de acesso da NFC-e",
                    "type": "string"
                },
                "date": {
                    "description": "Data da compra",
                    "type": "string"
                },
                "discount": {
                    "description": "Desconto",
                    "type": "number"
                },
                "items": {
                    "description": "Items extra√≠dos",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.PreviewItem"
                    }
                },
                "itemsCount": {
                    "description": "Total de items",
                    "type": "integer"
                },
                "number": {
                    "description": "N√∫mero da nota",
                    "type": "string"
                },
                "qrCodeUrl": {
                    "description": "URL original (para confirma√ß√£o)",
                    "type": "string"
                },
                "storeName": {
                    "description": "Nome do estabelecimento",
                    "type": "string"
                },
                "subtotal": {
                    "description": "Subtotal",
                    "type": "number"
                },
                "total": {
                    "description": "Total",
                    "type": "number"
                }
            }
        },
        "handler.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "joao@example.com"
                },
                "name": {
                    "type": "string",
                    "minLength": 2,
                    "example": "Jo√£o Silva"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "senha123"
                }
            }
        },
        "handler.ScanQRCodeConfirmRequest": {
            "type": "object",
            "required": [
                "items",
                "qrCodeUrl",
                "storeName"
            ],
            "properties": {
                "accessKey": {
                    "description": "Chave de acesso",
                    "type": "string"
                },
                "date": {
                    "description": "Data da compra (opcional, usa data atual se vazio)",
                    "type": "string"
                },
                "discount": {
                    "description": "Desconto",
                    "type": "number"
                },
                "items": {
                    "description": "Items (editados) - USA PreviewItem",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.PreviewItem"
                    }
                },
                "itemsCount": {
                    "description": "Total de items",
                    "type": "integer"
                },
                "number": {
                    "description": "N√∫mero da nota",
                    "type": "string"
                },
                "qrCodeUrl": {
                    "description": "URL original",
                    "type": "string"
                },
                "storeName": {
                    "description": "Nome do estabelecimento",
                    "type": "string"
                },
                "subtotal": {
                    "description": "Subtotal",
                    "type": "number"
                },
                "total": {
                    "description": "Total (opcional, calcula se zero)",
                    "type": "number"
                }
            }
        },
        "handler.ScanQRCodeConfirmResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.ScanQRCodePreviewRequest": {
            "type": "object",
            "required": [
                "qrCodeUrl"
            ],
            "properties": {
                "qrCodeUrl": {
                    "description": "URL do QR Code da NFC-e",
                    "type": "string"
                }
            }
        },
        "handler.ScanQRCodePreviewResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.PreviewReceiptData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.UpdateCategoryRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string",
                    "example": "#e74c3c"
                },
                "description": {
                    "type": "string",
                    "example": "Restaurantes e delivery"
                },
                "icon": {
                    "type": "string",
                    "example": "üçï"
                },
                "name": {
                    "type": "string",
                    "example": "Alimenta√ß√£o Fora"
                }
            }
        },
        "schemas.CategorySimple": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.ProductResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "unity": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.ProductSimple": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "unity": {
                    "type": "string"
                }
            }
        },
        "schemas.ReceiptBasic": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "itemCount": {
                    "description": "Quantidade de itens",
                    "type": "integer"
                },
                "storeName": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "schemas.ReceiptItemResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Apenas ID e Nome",
                    "allOf": [
                        {
                            "$ref": "#/definitions/schemas.CategorySimple"
                        }
                    ]
                },
                "categoryId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "productId": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "number"
                },
                "receiptId": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                },
                "unitPrice": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.ReceiptItemSummary": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Apenas ID e Nome",
                    "allOf": [
                        {
                            "$ref": "#/definitions/schemas.CategorySimple"
                        }
                    ]
                },
                "categoryId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "product": {
                    "description": "Nome e unidade do produto",
                    "allOf": [
                        {
                            "$ref": "#/definitions/schemas.ProductSimple"
                        }
                    ]
                },
                "productId": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                },
                "unitPrice": {
                    "type": "number"
                }
            }
        },
        "schemas.ReceiptResponse": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.ReceiptItemResponse"
                    }
                },
                "notes": {
                    "type": "string"
                },
                "storeName": {
                    "type": "string"
                },
                "subtotal": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "schemas.ReceiptSummary": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.ReceiptItemSummary"
                    }
                },
                "storeName": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "schemas.UserResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Digite \"Bearer\" seguido do seu token JWT (obtido no login). Exemplo: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}